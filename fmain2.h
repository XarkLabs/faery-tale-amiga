/* fmain2.c */
// Xark: NOTE Types altered to match C file (not Manx C promotion rules)
void      dohit(int32_t i, int32_t j, int32_t fc, int16_t wt);
void      aftermath(void);
int       proxcheck(int x, int y, int i);
int       nearest_fig(char constraint, int16_t dist);
int       calc_dist(int32_t a, int32_t b);
int       move_figure(int16_t fig, int16_t dir, int16_t dist);
void      drawcompass(int16_t dir);
void      fade_page(int16_t r, int16_t g, int16_t b, int16_t limit, uint16_t * colors);
void      colorplay(void);
void      ppick(void);
void      print(char * str);
void      print_cont(char * str);
void      extract(char * start);
void      announce_container(char * s);
void      announce_treasure(char * s);
void      name(void);
void      map_message(void);
void      message_off(void);
void      fade_down(void);
void      fade_normal(void);
void      stillscreen(void);
void      shape_read(void);
void      read_shapes(int32_t num);
void      load_track_range(int16_t f_block, int16_t b_count, APTR buffer, int16_t dr);
void      motor_off(void);
// void      seekn(void);
void      prep(int16_t slot);
void      load_next(void);
void      read_score(void);
void      copypage(char * br1, char * br2, int16_t x, int16_t y);
void      flipscan(void);
int       skipint(void);
uint8_t * into_chip(uint8_t * oldpointer, int32_t size);
void      witch_fx(struct fpage * fp);
void      do_objects(void);
void      leave_item(int16_t i, int16_t object);
void      change_object(int32_t id, int32_t flag);
void      set_objects(struct object * list, int16_t length, int32_t f);
BOOL      copy_protect_junk(void);
int       locktest(char * name, int32_t access);
int       cpytest(void);
BOOL      waitnewdisk(void);
void      savegame(int16_t hit);
void      saveload(uint8_t * buffer, int32_t length);
void      move_extent(int16_t e, int16_t x, int16_t y);
void      rescue(void);
void      win_colors(void);
void      day_fade(void);
void      do_tactic(int32_t i, int32_t tactic);
void      eat(int amt);
void      set_loc(void);
